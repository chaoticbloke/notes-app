version: 0.2

phases:
  pre_build:
    commands:
      - echo "Starting pre-build..."
      - mvn clean install                       # Build the Spring Boot JAR file
      - echo "Logging in to Amazon ECR..."
      - aws --version
      - REPOSITORY_URI=376129873053.dkr.ecr.eu-north-1.amazonaws.com/notes-springboot-app
      - aws ecr get-login-password --region eu-north-1 | docker login --username AWS --password-stdin $REPOSITORY_URI
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
  build:
    commands:
      - echo "Build started on `date`"
      - echo "Building the Docker image..."
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo "Build completed on `date`"
      - echo "Pushing the Docker images..."
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo "Writing image definitions file for ECS deployment..."
      - DOCKER_CONTAINER_NAME=notes-springboot-app  # must match ECS task definition container name
      - printf '[{"name":"%s","imageUri":"%s"}]' $DOCKER_CONTAINER_NAME $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - echo "Image definition file content:"
      - cat imagedefinitions.json

artifacts:
  files:
    - imagedefinitions.json
    - target/*.jar  # optional: includes your built JAR for debugging or reference
